cat("Avg abs diff in pscore:", mean(pscore_diff))
cat("Max abs diff in pscore:", max(pscore_diff))
adynarski.1 <- summarize.match(dynarski, ms.1)
# B
# add a propensity score caliper penalty
gamma <- 0.1 * sd(dynarski$prop)
mat.2 <- addcaliper(mat.1, z=dynarski$zb, p=dynarski$prop, caliper=gamma)
ms.2 <- pairmatch(mat.2, data=dynarski)
ms.2 <- pairmatch(mat.2, data=dynarski)
adynarski.2 <- summarize.match(dynarski, ms.2)
adynarski.2 <- summarize.match(dynarski, ms.2)
cat("(b)")
# C
pscore_diff_2 <- abs(adynarski.2$prop.0 - adynarski.2$prop.1)
cat("(c)")
cat("Avg abs diff in pscore:", mean(pscore_diff_2))
cat("Max abs diff in pscore:", max(pscore_diff_2))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(DOS2)
library(optmatch)
library(RItools)
library(sensitivitymult)
library(dplyr)
library(gridExtra)
source("utility.R")
set.seed(10)
setwd("/Users/davidegiovanardi/Desktop/MSE327/HW3")
data("dynarski")
dynarski <- dynarski[,-1]
plot(xBalance(zb ~ . -1, data=dynarski))
g1 <- ggplot(data=dynarski, aes(x=faminc, group=as.factor(zb), fill=as.factor(zb))) +
geom_density(alpha=0.5) +
theme_minimal()
g2 <- ggplot(data=dynarski, aes(x=as.factor(edm))) +
geom_histogram(stat="count") +
facet_grid(. ~ zb) +
theme_minimal()
g3 <- ggplot(data=dynarski, aes(x=as.factor(edmissm))) +
geom_histogram(stat="count") +
facet_grid(. ~ zb) +
theme_minimal()
g4 <- ggplot(data=dynarski, aes(x=as.factor(black))) +
geom_histogram(stat="count") +
facet_grid(. ~ zb) +
theme_minimal()
grid.arrange(g1, g2, g3, g4, nrow=2)
prop <- glm(zb ~ ., family=binomial, data=dynarski)$fitted.values
dynarski$prop <- prop
ggplot(data=dynarski, aes(x=prop, group=as.factor(zb), fill=as.factor(zb))) +
geom_density(alpha=0.5) +
theme_minimal()
mat.1 <- smahal(dynarski$zb, dynarski[,c("faminc", "incmiss", "black", "hisp",
"afqtpct", "edmissm", "edm", "female")])
ms.1 <- pairmatch(mat.1, data=dynarski)
adynarski.1 <- summarize.match(dynarski, ms.1)
plot(xBalance(zb ~ . + strata(ms.1) - 1, data=dynarski))
# A
pscore_diff <- abs(adynarski.1$prop.0 - adynarski.1$prop.1)
cat("(a)")
cat("Avg abs diff in pscore:", mean(pscore_diff))
cat("Max abs diff in pscore:", max(pscore_diff))
# B
# add a propensity score caliper penalty
mat.2 <- addcaliper(mat.1, z=dynarski$zb, p=dynarski$prop, caliper=0.1)
ms.2 <- pairmatch(mat.2, data=dynarski)
adynarski.2 <- summarize.match(dynarski, ms.2)
cat("(b)")
plot(xBalance(zb ~ . + strata(ms.2) - 1, data=dynarski))
# C
pscore_diff_2 <- abs(adynarski.2$prop.0 - adynarski.2$prop.1)
cat("(c)")
cat("Avg abs diff in pscore:", mean(pscore_diff_2))
cat("Max abs diff in pscore:", max(pscore_diff_2))
ms.3 <- pairmatch(mat.2, controls=5, data=dynarski)
adynarski.3 <- summarize.match(dynarski, ms.3)
# A
cat("(a)")
plot(xBalance(zb ~ . + strata(ms.3) - 1, data=dynarski))
# B
mat.3 <- addalmostexact(mat.2, z=dynarski$zb, f=dynarski$edm)
ms.4 <- pairmatch(mat.3, controls=5, data=dynarski)
adynarski.4 <- summarize.match(dynarski, ms.4)
cat("(b)")
plot(xBalance(zb ~ . + strata(ms.4) - 1, data=dynarski))
# C
cat("(c)")
cat("Let's plot them one next to each other to see whether it improved the matching")
par(mar=c(1,1,1,1))
par(mfrow=c(1,2))
plot(xBalance(zb ~ . + strata(ms.3) - 1, data=dynarski))
plot(xBalance(zb ~ . + strata(ms.4) - 1, data=dynarski))
ms.5 <- pairmatch(mat.2, controls=15, data=dynarski)
adynarski.4 <- summarize.match(dynarski, ms.5)
# A
cat("(a)")
plot(xBalance(zb ~ . + strata(ms.5) - 1, data=dynarski))
load("adynarski.Rdata")
mat.5 <- smahal(adynarski$z, select(adynarski, -z, -prop, -y))
gamma <- 0.1 * sd(adynarski$prop)
mat.6 <- addcaliper(mat.5, adynarski$z, adynarski$prop, caliper=0.1)
ms.1to1 <- pairmatch(mat.6, data=adynarski)
ms.1to15 <- pairmatch(mat.6, controls=15, data=adynarski)
cast.1to1 <- cast.senm(adynarski, ms.1to1)
frt.1 <- senm(y=cast.1to1$y, z=cast.1to1$z, mset=cast.1to1$mset, gamma=1, inner=0, trim=Inf)
cat("FRT for 1:1 ms (Gamma=1). p-value:", frt.1$pval)
frt.2 <- senm(y=cast.1to1$y, z=cast.1to1$z, mset=cast.1to1$mset, gamma=1.2, inner=0, trim=Inf)
cat("FRT for 1:1 ms (Gamma=1.2). p-value:", frt.2$pval)
cast.1to15 <- cast.senm(adynarski, ms.1to15)
frt.3 <- senm(y=cast.1to15$y, z=cast.1to15$z, mset=cast.1to15$mset, gamma=1, inner=0, trim=Inf)
cat("FRT for 1:15 ms (Gamma=1). p-value:", frt.3$pval)
frt.4 <- senm(y=cast.1to15$y, z=cast.1to15$z, mset=cast.1to15$mset, gamma=1.2, inner=0, trim=Inf)
cat("FRT for 1:15 ms (Gamma=1.2). p-value:", frt.4$pval)
# 1
perc <- quantile(adynarski$prop, probs=c(0, 0.20, 0.40, 0.60, 0.80, 1))
# 2
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
cat("Strata: [", names(perc)[i], ",", names(perc)[i+1], "]\n")
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], "z"]
} else {
cat("Strata: [", names(perc)[i], ",", names(perc)[i+1], "[\n")
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], "z"]
}
cat("Number of treated:", sum(z_strata), "\n")
cat("Number of control:", length(z_strata) - sum(z_strata), "\n\n")
}
z_strata
# 3
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
cat("Strata: [", names(perc)[i], ",", names(perc)[i+1], "]\n")
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
cat("Strata: [", names(perc)[i], ",", names(perc)[i+1], "[\n")
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
cat("Number of treated:", sum(z_strata), "\n")
cat("Number of control:", length(z_strata) - sum(z_strata), "\n\n")
}
z_strata
# 3
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[z_strata$z == 1])
cat(N_1)
cat("Number of treated:", sum(z_strata), "\n")
cat("Number of control:", length(z_strata) - sum(z_strata), "\n\n")
}
# 3
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[,"z"])
cat(N_1)
cat("Number of treated:", sum(z_strata), "\n")
cat("Number of control:", length(z_strata) - sum(z_strata), "\n\n")
}
# 3
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[,"z"])
cat(N_1)
}
z_strata[,"z"] * z_strata[,"y"]
z_strata
z_strata[,"z"]
z_strata[,"y"]
1 - z_strata[,"z"]
length(z_strata)
dim(z_strata)[1]
nrow(z_strata)
# 3
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[,"z"])
N_0 <- nrow(z_strata) - N_1
tau_dim <- (1/N_1 * sum(z_strata[,"z"] * z_strata[,"y"]) -
1/N_0 * sum((1 - z_strata[,"z"]) * z_strata[,"y"]))
print(tau_dim)
}
strata <- seq(1,length(perc)-1)
strata
strata <- rep(0,length(perc)-1)
strata
strata_dim <- rep(0,length(perc)-1)
strata_var <- rep(0,length(perc)-1)
strata_weight <- rep(0,length(perc)-1)
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[,"z"])
N_0 <- nrow(z_strata) - N_1
Z <- z_strata[,"z"]
y <- z_strata[,"y"]
strata_dim[i] <- (1/N_1 * sum(Z * y) -
1/N_0 * sum((1 - Z) * y))
V_1 <- compute_var(Z, N_1, y)
V_0 <- compute_var(1-Z, N_0, y)
strata_var[i] <- V_1/N_1 + V_0/N_0
strata_weight[i] <- nrow(z_strata) / nrow(adynarski)
}
# 3
compute_var <- function(Z, N, y) {
y_bar <- sum(Z * y) / N
var_Z <- 1/(N-1) * sum((Z * (y-y_bar)^2))
return(var_Z)
}
for (i in 1:(length(perc)-1)) {
if (i == length(perc)-1) {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop <= perc[i+1], c("z", "y")]
} else {
z_strata <- adynarski[adynarski$prop >= perc[i] & adynarski$prop < perc[i+1], c("z", "y")]
}
N_1 <- sum(z_strata[,"z"])
N_0 <- nrow(z_strata) - N_1
Z <- z_strata[,"z"]
y <- z_strata[,"y"]
strata_dim[i] <- (1/N_1 * sum(Z * y) -
1/N_0 * sum((1 - Z) * y))
V_1 <- compute_var(Z, N_1, y)
V_0 <- compute_var(1-Z, N_0, y)
strata_var[i] <- V_1/N_1 + V_0/N_0
strata_weight[i] <- nrow(z_strata) / nrow(adynarski)
}
sum(strata_dim * strata_weight)
cat("Stratified DIM estimate of ATE =", sum(strata_dim * strata_weight))
cat("Estimate of the variance =", sum(strata_var * strata_weight))
tau_dim <- sum(strata_dim * strata_weight)
var_dim <- sum(strata_var * strata_weight)
cat("Stratified DIM estimate of ATE =", tau_dim)
cat("Estimate of the variance =", var_dim)
# 4
compute_CI <- function(tau, V, alpha=0.05) {
low <- tau - qnorm(1-alpha/2) * sqrt(V)
high <- tau + qnorm(1-alpha/2) * sqrt(V)
return(c(low, high))
}
cat("95% confidence interval =", compute_CI(tau_dim, var_dim))
frt.1 <- senm(y=cast.1to1$y, z=cast.1to1$z, mset=cast.1to1$mset, gamma=1, inner=0, trim=Inf)
frt.2 <- senm(y=cast.1to1$y, z=cast.1to1$z, mset=cast.1to1$mset, gamma=1.2, inner=0, trim=Inf)
cat("FRT for 1:1 ms (Gamma=1.2). p-value:", frt.2$pval)
cat("FRT for 1:1 ms (Gamma=1). p-value:", frt.1$pval)
tau_dim <- sum(strata_dim * strata_weight)
var_dim <- sum(strata_var * strata_weight^2)
cat("Stratified DIM estimate of ATE =", tau_dim)
cat("Estimate of the variance =", var_dim)
# 4
compute_CI <- function(tau, V, alpha=0.05) {
low <- tau - qnorm(1-alpha/2) * sqrt(V)
high <- tau + qnorm(1-alpha/2) * sqrt(V)
return(c(low, high))
}
cat("95% confidence interval =", compute_CI(tau_dim, var_dim))
# A
pscore_diff <- abs(adynarski.1$prop.0 - adynarski.1$prop.1)
cat("(a)")
cat("Avg abs diff in pscore:", mean(pscore_diff))
cat("Max abs diff in pscore:", max(pscore_diff))
# B
# add a propensity score caliper penalty
mat.2 <- addcaliper(mat.1, z=dynarski$zb, p=dynarski$prop, caliper=0.1)
ms.2 <- pairmatch(mat.2, data=dynarski)
adynarski.2 <- summarize.match(dynarski, ms.2)
cat("(b)")
plot(xBalance(zb ~ . + strata(ms.2) - 1, data=dynarski))
# C
pscore_diff_2 <- abs(adynarski.2$prop.0 - adynarski.2$prop.1)
cat("(c)")
cat("Avg abs diff in pscore:", mean(pscore_diff_2))
cat("Max abs diff in pscore:", max(pscore_diff_2))
print(perc)
help("dynarski")
ms.3 <- pairmatch(mat.2, controls=5, data=dynarski)
ms.3 <- pairmatch(mat.2, controls=5, data=dynarski)
adynarski.3 <- summarize.match(dynarski, ms.3)
# A
cat("(a)")
plot(xBalance(zb ~ . + strata(ms.3) - 1, data=dynarski))
# B
mat.3 <- addalmostexact(mat.2, z=dynarski$zb, f=dynarski$edm)
ms.4 <- pairmatch(mat.3, controls=5, data=dynarski)
ms.4 <- pairmatch(mat.3, controls=5, data=dynarski)
adynarski.4 <- summarize.match(dynarski, ms.4)
cat("(b)")
plot(xBalance(zb ~ . + strata(ms.4) - 1, data=dynarski))
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
load("pmanalysis.RData")
View(dat)
names(dat)
dat[,"pmfu"]
dat["a" == 0, "pmfu"]
dat[dat$a == 0, "pmfu"]
mean(dat[dat$a == 0, "pmfu"])
mean(na.omit(dat[dat$a == 0, "pmfu"]))
mean(na.omit(dat[dat$a == 1, "pmfu"]))
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
load("pmanalysis.RData")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
load("pmanalysis.RData")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
load("pmanalysis.RData")
# EDA
## Outcomes
### Ambient PM2.5 2010-2012
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "pmfu"])))
cat(mean(na.omit(dat[dat$a == 1, "pmfu"])))
library(ggplot2)
ggplot(dat, aes(x=pmfu, fill=a, color=a)) +
geom_histogram(position="identity")
View(dat)
df <- data.frame(dat)
ggplot(df, aes(x=pmfu, fill=a, color=a)) +
geom_histogram(position="identity")
df$a
df <- data.frame(dat)
ggplot(df, aes(x=pmfu, fill=a, color=a)) +
geom_histogram(position="identity")
na.omit(dat[, c("a", "pmfu")])
clean_df <- function(dat, outcome) {
df <- na.omit(dat[,c("a",outcome)])
return(df)
}
df <- clean_df(dat, "pmfu")
ggplot(df, aes(x=pmfu, fill=a, color=a)) +
geom_histogram(position="identity")
return(data.frame(df))
clean_df <- function(dat, outcome) {
df <- na.omit(dat[,c("a",outcome)])
return(data.frame(df))
}
df <- clean_df(dat, "pmfu")
ggplot(df, aes(x=pmfu, fill=a, color=a)) +
geom_histogram(position="identity")
ggplot(df, aes(pmfu)) +
geom_histogram(binwidth = 0.05)
ggplot(df, aes(pmfu)) +
geom_histogram(binwidth = 0.15)
ggplot(df, aes(pmfu, fill = a)) +
geom_histogram(binwidth = 0.15)
df
df$att <- c("non-attainment", "attainment")[(df$a)]
c("non-attainment", "attainment")[(df$a)]
c("non-attainment", "attainment")[(df$a)+1]
df$att <- c("non-attainment", "attainment")[(df$a)+1]
ggplot(df, aes(pmfu, fill = att)) +
geom_histogram(binwidth = 0.15)
df$pm <- c("non-attainment", "attainment")[(df$a)+1]
ggplot(df, aes(pmfu, fill = att)) +
geom_histogram(binwidth = 0.15)
df <- clean_df(dat, "pmfu")
df$pm <- c("non-attainment", "attainment")[(df$a)+1]
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15)
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, alpha=0.5)
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, alpha=0.5, position="identity")
ggplot(df, aes(pmfu, fill = "pm"white)) +
ggplot(df, aes(pmfu, fill = "pm"white)) +
ggplot(df, aes(pmfu, color = "pm", fill = "white")) +
geom_histogram(binwidth = 0.15, position = "identity")
ggplot(df, aes(pmfu, color = "pm")) +
geom_histogram(binwidth = 0.15, fill = "white", position = "identity")
ggplot(df, aes(pmfu, color = "pm")) +
geom_histogram(binwidth = 0.15, position = "identity")
ggplot(df, aes(pmfu, fill = "pm", color = "pm")) +
geom_histogram(binwidth = 0.15, position = "identity")
ggplot(df, aes(pmfu, fill = "pm")) +
geom_histogram(binwidth = 0.15, position = "identity")
df$pm <- c("non-attainment", "attainment")[(df$a)+1]
ggplot(df, aes(pmfu, fill = "pm")) +
geom_histogram(binwidth = 0.15, position = "identity")
ggplot(df, aes(pmfu, fill = "pm")) +
geom_histogram(binwidth = 0.15)
df <- clean_df(dat, "pmfu")
df$pm <- c("non-attainment", "attainment")[(df$a)+1]
ggplot(df, aes(pmfu, fill = "pm")) +
geom_histogram(binwidth = 0.15)
tity
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, position="identity")
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, fill="white", position="identity")
ggplot(df, aes(pmfu, color = pm, fill = "white")) +
geom_histogram(binwidth = 0.15, position="identity")
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, position="identity")
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, position="identity")
ggplot(df, aes(pmfu, fill = pm)) +
geom_histogram(binwidth = 0.15, alpha = 0.75, position="identity")
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white")
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white", alpha = 0.75)
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white", alpha = 0.75, position = "identity")
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white", alpha = 0.75)
, position = "identity"
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white", alpha = 0.75, position = "identity")
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.15, fill = "white", alpha = 0.75)
ggplot(df, aes(pmfu, color = pm)) +
geom_histogram(binwidth = 0.25, fill = "white", alpha = 0.75)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(binwidth = 0.25, fill = "white", alpha = 0.75)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5)
geom_histogram(aes( position="identity", alpha=0.5, )
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram( position="identity", alpha=0.5, )
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.6)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25)
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal()
mean(df[df$pm == "attainment", "pmfu"])
df$pm <- c("attainment", "non-attainment")[(df$a)+1]
mean(df[df$pm == "attainment", "pmfu"])
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal() +
ggtitle("Outcome: ")
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal() +
ggtitle("Outcome: Ambeint PM2.5 2010-2012")
ggplot(df, aes(pmfu, color = pm, fill = pm)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal() +
ggtitle("Outcome: Ambient PM2.5 2010-2012")
df <- clean_df(dat, "pmfu")
df$Area <- c("attainment", "non-attainment")[(df$a)+1]
ggplot(df, aes(pmfu, color = Area, fill = Area)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal() +
ggtitle("Outcome: Ambient PM2.5 2010-2012")
View(dat)
View(dat)
names(dat)
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "total_death_FFS_MA.2012"])))
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "Tot_den_for_death_MA_FFS.2012"])))
254 / 5082
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "pmfu95"])))
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "Person_year_FFS.2012"])))
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "Female_rate.2012"])))
cat(mean(na.omit(dat[dat$a == 1, "Tot_den_for_death_MA_FFS.2012"])))
cat(mean(na.omit(dat[dat$a == 1, "Tot_den_FFS.2012"])))
cat(mean(na.omit(dat[dat$a == 1, "Total_den_FFS.2012"])))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
setwd("/Users/davidegiovanardi/Desktop/MSE327/PM2.5-Nonattainment/MSE327/")
load("pmanalysis.RData")
# Check that it matches Table 1
cat(mean(na.omit(dat[dat$a == 0, "pmfu"])))
cat(mean(na.omit(dat[dat$a == 1, "pmfu"])))
clean_df <- function(dat, outcome) {
df <- na.omit(dat[,c("a",outcome)])
return(data.frame(df))
}
df <- clean_df(dat, "pmfu")
df$Area <- c("attainment", "non-attainment")[(df$a)+1]
ggplot(df, aes(pmfu, color = Area, fill = Area)) +
geom_histogram(aes(y=..density..), position="identity", alpha=0.5, bins = 25) +
geom_density(alpha = 0.25) +
theme_minimal() +
ggtitle("Outcome: Ambient PM2.5 2010-2012")
cat(mean(na.omit(dat[dat$a == 0, "HF.2012"])))
